{"ast":null,"code":"import \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\n\nvar _jsxFileName = \"E:\\\\work\\\\lingye\\\\src\\\\pages\\\\chat\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = _Input;\n\nconst boy = require('../../assets/boy.png').default;\n\nconst girl = require('../../assets/girl.png').default;\n\nconst ChatPC = () => {\n  _s();\n\n  // socket\n  let ws;\n  let httpUrl = \"http://websocket.sendcmd.com\";\n  let wsUrl = \"ws://websocket.sendcmd.com:9004\"; // let httpUrl = \"http://192.168.3.17:9004\";\n  // let wsUrl = \"ws://192.168.3.17:9004\";\n\n  let currentUserList = useRef();\n  let currentUserActive = useRef(); // 选中的聊天用户\n\n  let currentChatList = useRef(); // 用户聊天列表\n\n  const [userList, setuserList] = useState(); // 客服聊天列表\n\n  const [chatList, setchatList] = useState(); // 用户聊天列表\n\n  const [sessionIds, setsessionIds] = useState();\n  const [userActive, setuserActive] = useState();\n  const [userName, setuseruserName] = useState();\n  const [adminUser] = useState(Cookies.get(\"user\"));\n  const [msg, setmessage] = useState(\"\");\n  const [myID, setmyID] = useState();\n\n  const onClickSelectUser = item => {\n    setuserActive(item.key);\n    currentUserActive.current = item.key;\n    currentUserActive.current = item.key;\n    setuseruserName(item.userName);\n  };\n\n  useEffect(() => {\n    if (adminUser === 'admin') {\n      onopen(adminUser);\n\n      let _userList = sessionStorage.getItem('userList');\n\n      if (_userList !== null) {\n        setuserList(JSON.parse(_userList));\n      }\n    } else {\n      let key = sessionStorage.getItem('myID');\n\n      let _currentChatList = sessionStorage.getItem('currentChatList');\n\n      if (key) {\n        setmyID(key);\n        onopen(key);\n\n        if (_currentChatList) {\n          currentChatList.current = JSON.parse(_currentChatList);\n          setchatList(JSON.parse(_currentChatList));\n        }\n      } else {\n        getNewUser();\n      }\n    }\n  }, []);\n  useEffect(() => {}, [chatList]);\n  useEffect(() => {\n    // 客服初始化\n    if (!userName && !userActive && userList && adminUser === 'admin') {\n      // debugger\n      console.log(userList[0].userName);\n      let userName = userList[0].userName;\n      let key = userList[0].key;\n      currentUserActive.current = key;\n      currentUserActive.current = userName;\n      setuserActive(userList[0].key);\n      setuseruserName(userList[0].userName);\n    }\n  }, [userList]);\n  /**\r\n   * 不是admin 生成新用户\r\n   * @param  \r\n   */\n\n  const getNewUser = () => {\n    let url = httpUrl + \"/chat/getRoomProof\";\n    axios.get(url).then(response => {\n      let res = response.data;\n\n      if (200 === res.success) {\n        setmyID(res.data);\n        sessionStorage.setItem('myID', res.data);\n        onopen(res.data);\n      }\n    });\n  };\n  /*\r\n   * 加入到房间\r\n   */\n\n\n  const onopen = proof => {\n    // let addRoomUrl = 'ws://127.0.0.1:9004/chat-room/' + proof;\n    let addRoomUrl = wsUrl + '/chat-room/' + proof;\n    ws = new WebSocket(addRoomUrl); // 连接\n\n    ws.onopen = () => {\n      console.log(\"[\" + proof + \"] 加入连接...\");\n    }; // 接收消息\n\n\n    ws.onmessage = event => {\n      // 服务端发送的消息\n      let dto = JSON.parse(event.data); // flag\n\n      const {\n        sender,\n        message,\n        flag\n      } = dto;\n\n      if (adminUser === 'admin') {\n        // 客服\n        let _userList = currentUserList.current || [];\n\n        const {\n          state,\n          index\n        } = isExistUser(sender, _userList);\n\n        if (flag === 0) {// 聊天\n        }\n\n        if (flag === 1 && sender !== \"admin\") {\n          // 进入聊天\n          if (_userList.length === 0 || !state) {\n            // 没有用户 或者 不在用户列表中\n            _userList.unshift({\n              key: sender,\n              flag,\n              userName: sender,\n              charList: [{\n                sender: \"admin\",\n                message: '你好'\n              }]\n            });\n          }\n\n          if (state) {\n            // 存在用户列表中 \n            _userList[index].flag = flag;\n          }\n        }\n\n        if (flag === 2) {\n          //离开 \n          if (_userList.length !== 0) {\n            let leave = _userList.splice(index, 1)[0];\n\n            leave['flag'] = flag;\n\n            _userList.push(leave);\n          }\n        }\n\n        if (_userList.length !== 0) {\n          currentUserList.current = _userList;\n          sessionStorage.setItem(\"userList\", JSON.stringify(_userList));\n          setuserList([..._userList]);\n        }\n      } else {\n        // 用户\n        let _currentChatList = currentChatList.current || [];\n\n        if (flag === 0) {\n          // 聊天\n          _currentChatList.push({\n            sender,\n            message\n          });\n        }\n\n        if (flag === 1 && !sessionStorage.getItem('currentChatList')) {\n          // 进入聊天\n          _currentChatList.push({\n            sender: \"admin\",\n            message: '你好'\n          });\n        }\n\n        currentChatList.current = _currentChatList;\n        setchatList([..._currentChatList]);\n        sessionStorage.setItem(\"currentChatList\", JSON.stringify(_currentChatList));\n      }\n    }; // 关闭连接\n\n\n    ws.onclose = () => {// $('#message_content').append('[' + proof + '] 离开了聊天室!');\n      // console.log(\"[\" + proof + \"] 退出连接...\");\n    };\n  }; // 判断用户是否存着客户聊天列表\n\n\n  const isExistUser = (key, userList) => {\n    let state = false,\n        index = 0;\n    userList.forEach((element, idx) => {\n      if (element.key === key) {\n        state = true;\n        index = idx;\n      }\n    });\n    return {\n      state,\n      index\n    };\n  }; // 发送消息\n\n\n  const sendMessage = () => {\n    if (!msg) {\n      _message.error(\"请输入消息内容\");\n\n      return false;\n    }\n\n    let sendToHimUrl;\n    let param;\n\n    if (adminUser === \"admin\") {\n      sendToHimUrl = httpUrl + '/chat/admin/sendToHim';\n      param = {\n        who: userActive,\n        msg: msg\n      };\n    } else {\n      sendToHimUrl = httpUrl + '/chat/' + myID + '/sendToHim';\n      param = {\n        who: \"admin\",\n        msg: msg\n      };\n    }\n\n    axios.post(sendToHimUrl, param).then(response => {\n      let res = response.data;\n\n      if (200 === res.success) {\n        // 清空发送的消息\n        setmessage(\"\");\n      } else {\n        setmessage(\"\");\n\n        _message.error(res.message);\n      }\n    });\n  }; // 连接的是哪个客服\n\n\n  const getCustomerService = sessionIds => {\n    let cName = \"\";\n\n    if (sessionIds) {\n      sessionIds.forEach(element => {\n        if (element.indexOf(\"admin\") !== -1) {\n          cName = element;\n        }\n      });\n    }\n\n    return cName;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat-window\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chat-pc\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"char-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), userList && userList.length && userList.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: userActive === item.userName ? 'active chat-row' : 'chat-row',\n              onClick: () => onClickSelectUser(item),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: boy,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this)]\n            }, item.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-title\",\n            children: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-msg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connect-msg\",\n              children: adminUser ? `${adminUser}连接成功` : `客服${getCustomerService(sessionIds)}为你服务`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), adminUser === 'admin' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-msg left\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"girl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u6492\\u5927\\u58F0\\u5730\\u4ED8 \\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-msg right\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"girl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u6492\\u5927\\u58F0\\u5730\\u4ED8 \\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\\u6492\\u5927\\u58F0\\u5730\\u4ED8\\u591A\\u6492\\u6240\\u591A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 57\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat\",\n              children: chatList && chatList.length && chatList.map((item, index) => {\n                if (item.sender === 'admin') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-msg left\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"girl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 52\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-msg right\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"girl\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 49\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 52\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-send\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"send-push\",\n              children: /*#__PURE__*/_jsxDEV(TextArea, {\n                value: msg,\n                onChange: e => setmessage(e.target.value),\n                autoSize: {\n                  minRows: 3,\n                  maxRows: 3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"send-btn\",\n              onClick: sendMessage,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\u53D1\\u9001\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatPC, \"XU+78bRDp2ZWnXaeaBFbYAf6kq8=\");\n\n_c = ChatPC;\nexport default ChatPC;\n\nfunction item(item, index) {\n  throw new Error('Function not implemented.');\n}\n\nfunction index(item, index) {\n  throw new Error('Function not implemented.');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPC\");","map":{"version":3,"sources":["E:/work/lingye/src/pages/chat/index.tsx"],"names":["React","useEffect","useRef","useState","Cookies","axios","TextArea","boy","require","default","girl","ChatPC","ws","httpUrl","wsUrl","currentUserList","currentUserActive","currentChatList","userList","setuserList","chatList","setchatList","sessionIds","setsessionIds","userActive","setuserActive","userName","setuseruserName","adminUser","get","msg","setmessage","myID","setmyID","onClickSelectUser","item","key","current","onopen","_userList","sessionStorage","getItem","JSON","parse","_currentChatList","getNewUser","console","log","url","then","response","res","data","success","setItem","proof","addRoomUrl","WebSocket","onmessage","event","dto","sender","message","flag","state","index","isExistUser","length","unshift","charList","leave","splice","push","stringify","onclose","forEach","element","idx","sendMessage","error","sendToHimUrl","param","who","post","getCustomerService","cName","indexOf","map","e","target","value","minRows","maxRows","Error"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AACA,MAAM;AAAEC,EAAAA;AAAF,UAAN;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,sBAAD,CAAP,CAAgCC,OAA5C;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,uBAAD,CAAP,CAAiCC,OAA9C;;AACA,MAAME,MAAgB,GAAG,MAAM;AAAA;;AAC3B;AACA,MAAIC,EAAJ;AACA,MAAIC,OAAO,GAAG,8BAAd;AACA,MAAIC,KAAK,GAAG,iCAAZ,CAJ2B,CAK3B;AACA;;AACA,MAAIC,eAAoB,GAAGb,MAAM,EAAjC;AACA,MAAIc,iBAAsB,GAAGd,MAAM,EAAnC,CAR2B,CAQW;;AACtC,MAAIe,eAAoB,GAAGf,MAAM,EAAjC,CAT2B,CASS;;AACpC,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC,CAV2B,CAU4B;;AACvD,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC,CAX2B,CAW4B;;AACvD,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,EAA5C;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,EAA5C;AACA,QAAM,CAACuB,QAAD,EAAWC,eAAX,IAA8BxB,QAAQ,EAA5C;AACA,QAAM,CAACyB,SAAD,IAAczB,QAAQ,CAACC,OAAO,CAACyB,GAAR,CAAY,MAAZ,CAAD,CAA5B;AACA,QAAM,CAACC,GAAD,EAAMC,UAAN,IAAoB5B,QAAQ,CAAM,EAAN,CAAlC;AACA,QAAM,CAAC6B,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,EAAhC;;AACA,QAAM+B,iBAAiB,GAAIC,IAAD,IAAqB;AAC3CV,IAAAA,aAAa,CAACU,IAAI,CAACC,GAAN,CAAb;AACApB,IAAAA,iBAAiB,CAACqB,OAAlB,GAA4BF,IAAI,CAACC,GAAjC;AACApB,IAAAA,iBAAiB,CAACqB,OAAlB,GAA4BF,IAAI,CAACC,GAAjC;AACAT,IAAAA,eAAe,CAACQ,IAAI,CAACT,QAAN,CAAf;AACH,GALD;;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI2B,SAAS,KAAK,OAAlB,EAA2B;AACvBU,MAAAA,MAAM,CAACV,SAAD,CAAN;;AACA,UAAIW,SAAS,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;;AACA,UAAIF,SAAS,KAAK,IAAlB,EAAwB;AACpBpB,QAAAA,WAAW,CAACuB,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAD,CAAX;AACH;AACJ,KAND,MAMO;AACH,UAAIH,GAAG,GAAGI,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAV;;AACA,UAAIG,gBAAgB,GAAGJ,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAvB;;AACA,UAAIL,GAAJ,EAAS;AACLH,QAAAA,OAAO,CAACG,GAAD,CAAP;AACAE,QAAAA,MAAM,CAACF,GAAD,CAAN;;AACA,YAAIQ,gBAAJ,EAAsB;AAClB3B,UAAAA,eAAe,CAACoB,OAAhB,GAA0BK,IAAI,CAACC,KAAL,CAAWC,gBAAX,CAA1B;AACAvB,UAAAA,WAAW,CAACqB,IAAI,CAACC,KAAL,CAAWC,gBAAX,CAAD,CAAX;AACH;AACJ,OAPD,MAOO;AACHC,QAAAA,UAAU;AACb;AACJ;AACJ,GArBQ,EAqBN,EArBM,CAAT;AAsBA5C,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACmB,QAAD,CAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AAAE;AACd,QAAI,CAACyB,QAAD,IAAa,CAACF,UAAd,IAA4BN,QAA5B,IAAwCU,SAAS,KAAK,OAA1D,EAAmE;AAC/D;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY7B,QAAQ,CAAC,CAAD,CAAR,CAAYQ,QAAxB;AACA,UAAIA,QAAQ,GAAGR,QAAQ,CAAC,CAAD,CAAR,CAAYQ,QAA3B;AACA,UAAIU,GAAG,GAAGlB,QAAQ,CAAC,CAAD,CAAR,CAAYkB,GAAtB;AACApB,MAAAA,iBAAiB,CAACqB,OAAlB,GAA4BD,GAA5B;AACApB,MAAAA,iBAAiB,CAACqB,OAAlB,GAA4BX,QAA5B;AACAD,MAAAA,aAAa,CAACP,QAAQ,CAAC,CAAD,CAAR,CAAYkB,GAAb,CAAb;AACAT,MAAAA,eAAe,CAACT,QAAQ,CAAC,CAAD,CAAR,CAAYQ,QAAb,CAAf;AACH;AACJ,GAXQ,EAWN,CAACR,QAAD,CAXM,CAAT;AAaA;AACJ;AACA;AACA;;AACI,QAAM2B,UAAU,GAAG,MAAM;AACrB,QAAIG,GAAG,GAAGnC,OAAO,GAAG,oBAApB;AACAR,IAAAA,KAAK,CAACwB,GAAN,CAAUmB,GAAV,EAAeC,IAAf,CAAoBC,QAAQ,IAAI;AAC5B,UAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;;AACA,UAAI,QAAQD,GAAG,CAACE,OAAhB,EAAyB;AACrBpB,QAAAA,OAAO,CAACkB,GAAG,CAACC,IAAL,CAAP;AACAZ,QAAAA,cAAc,CAACc,OAAf,CAAuB,MAAvB,EAA+BH,GAAG,CAACC,IAAnC;AACAd,QAAAA,MAAM,CAACa,GAAG,CAACC,IAAL,CAAN;AACH;AACJ,KAPD;AAQH,GAVD;AAWA;AACJ;AACA;;;AACI,QAAMd,MAAM,GAAIiB,KAAD,IAAmB;AAC9B;AACA,QAAIC,UAAU,GAAG1C,KAAK,GAAG,aAAR,GAAwByC,KAAzC;AACA3C,IAAAA,EAAE,GAAG,IAAI6C,SAAJ,CAAcD,UAAd,CAAL,CAH8B,CAK9B;;AACA5C,IAAAA,EAAE,CAAC0B,MAAH,GAAY,MAAM;AACdQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAMQ,KAAN,GAAc,WAA1B;AACH,KAFD,CAN8B,CAU9B;;;AACA3C,IAAAA,EAAE,CAAC8C,SAAH,GAAgBC,KAAD,IAAW;AACtB;AACA,UAAIC,GAAG,GAAGlB,IAAI,CAACC,KAAL,CAAWgB,KAAK,CAACP,IAAjB,CAAV,CAFsB,CAGtB;;AACA,YAAM;AAAES,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBC,QAAAA;AAAnB,UAA4BH,GAAlC;;AACA,UAAIhC,SAAS,KAAK,OAAlB,EAA2B;AAAE;AACzB,YAAIW,SAAS,GAAGxB,eAAe,CAACsB,OAAhB,IAA2B,EAA3C;;AACA,cAAM;AAAE2B,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBC,WAAW,CAACL,MAAD,EAAStB,SAAT,CAApC;;AACA,YAAIwB,IAAI,KAAK,CAAb,EAAgB,CAAE;AAEjB;;AACD,YAAIA,IAAI,KAAK,CAAT,IAAcF,MAAM,KAAK,OAA7B,EAAsC;AAAE;AACpC,cAAItB,SAAS,CAAC4B,MAAV,KAAqB,CAArB,IAA0B,CAACH,KAA/B,EAAsC;AAAE;AACpCzB,YAAAA,SAAS,CAAC6B,OAAV,CAAkB;AAAEhC,cAAAA,GAAG,EAAEyB,MAAP;AAAeE,cAAAA,IAAf;AAAqBrC,cAAAA,QAAQ,EAAEmC,MAA/B;AAAuCQ,cAAAA,QAAQ,EAAE,CAAC;AAAER,gBAAAA,MAAM,EAAE,OAAV;AAAmBC,gBAAAA,OAAO,EAAE;AAA5B,eAAD;AAAjD,aAAlB;AACH;;AACD,cAAIE,KAAJ,EAAW;AAAE;AACTzB,YAAAA,SAAS,CAAC0B,KAAD,CAAT,CAAiBF,IAAjB,GAAwBA,IAAxB;AACH;AACJ;;AACD,YAAIA,IAAI,KAAK,CAAb,EAAgB;AAAE;AACd,cAAIxB,SAAS,CAAC4B,MAAV,KAAqB,CAAzB,EAA4B;AACxB,gBAAIG,KAAK,GAAG/B,SAAS,CAACgC,MAAV,CAAiBN,KAAjB,EAAwB,CAAxB,EAA2B,CAA3B,CAAZ;;AACAK,YAAAA,KAAK,CAAC,MAAD,CAAL,GAAgBP,IAAhB;;AACAxB,YAAAA,SAAS,CAACiC,IAAV,CAAeF,KAAf;AACH;AACJ;;AACD,YAAI/B,SAAS,CAAC4B,MAAV,KAAqB,CAAzB,EAA4B;AACxBpD,UAAAA,eAAe,CAACsB,OAAhB,GAA0BE,SAA1B;AACAC,UAAAA,cAAc,CAACc,OAAf,CAAuB,UAAvB,EAAmCZ,IAAI,CAAC+B,SAAL,CAAelC,SAAf,CAAnC;AACApB,UAAAA,WAAW,CAAC,CAAC,GAAGoB,SAAJ,CAAD,CAAX;AACH;AACJ,OA1BD,MA0BO;AAAE;AACL,YAAIK,gBAAgB,GAAG3B,eAAe,CAACoB,OAAhB,IAA2B,EAAlD;;AACA,YAAI0B,IAAI,KAAK,CAAb,EAAgB;AAAE;AACdnB,UAAAA,gBAAgB,CAAC4B,IAAjB,CAAsB;AAAEX,YAAAA,MAAF;AAAUC,YAAAA;AAAV,WAAtB;AACH;;AACD,YAAIC,IAAI,KAAK,CAAT,IAAc,CAACvB,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAAnB,EAA8D;AAAE;AAC5DG,UAAAA,gBAAgB,CAAC4B,IAAjB,CAAsB;AAAEX,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,OAAO,EAAE;AAA5B,WAAtB;AACH;;AACD7C,QAAAA,eAAe,CAACoB,OAAhB,GAA0BO,gBAA1B;AACAvB,QAAAA,WAAW,CAAC,CAAC,GAAGuB,gBAAJ,CAAD,CAAX;AACAJ,QAAAA,cAAc,CAACc,OAAf,CAAuB,iBAAvB,EAA0CZ,IAAI,CAAC+B,SAAL,CAAe7B,gBAAf,CAA1C;AACH;AACJ,KA3CD,CAX8B,CAwD9B;;;AACAhC,IAAAA,EAAE,CAAC8D,OAAH,GAAa,MAAM,CACf;AACA;AACH,KAHD;AAIH,GA7DD,CAjF2B,CA+I3B;;;AACA,QAAMR,WAAW,GAAG,CAAC9B,GAAD,EAAclB,QAAd,KAAgC;AAChD,QAAI8C,KAAK,GAAG,KAAZ;AAAA,QAAmBC,KAAK,GAAG,CAA3B;AACA/C,IAAAA,QAAQ,CAACyD,OAAT,CAAiB,CAACC,OAAD,EAAeC,GAAf,KAA+B;AAC5C,UAAID,OAAO,CAACxC,GAAR,KAAgBA,GAApB,EAAyB;AACrB4B,QAAAA,KAAK,GAAG,IAAR;AACAC,QAAAA,KAAK,GAAGY,GAAR;AACH;AACJ,KALD;AAMA,WAAO;AAAEb,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAP;AACH,GATD,CAhJ2B,CA0J3B;;;AACA,QAAMa,WAAW,GAAG,MAAM;AACtB,QAAI,CAAChD,GAAL,EAAU;AACN,eAAQiD,KAAR,CAAc,SAAd;;AACA,aAAO,KAAP;AACH;;AACD,QAAIC,YAAJ;AACA,QAAIC,KAAJ;;AACA,QAAIrD,SAAS,KAAK,OAAlB,EAA2B;AACvBoD,MAAAA,YAAY,GAAGnE,OAAO,GAAG,uBAAzB;AACAoE,MAAAA,KAAK,GAAG;AACJC,QAAAA,GAAG,EAAE1D,UADD;AAEJM,QAAAA,GAAG,EAAEA;AAFD,OAAR;AAIH,KAND,MAMO;AACHkD,MAAAA,YAAY,GAAGnE,OAAO,GAAG,QAAV,GAAqBmB,IAArB,GAA4B,YAA3C;AACAiD,MAAAA,KAAK,GAAG;AACJC,QAAAA,GAAG,EAAE,OADD;AAEJpD,QAAAA,GAAG,EAAEA;AAFD,OAAR;AAIH;;AACDzB,IAAAA,KAAK,CAAC8E,IAAN,CAAWH,YAAX,EAAyBC,KAAzB,EAAgChC,IAAhC,CAAsCC,QAAD,IAA8B;AAC/D,UAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB;;AACA,UAAI,QAAQD,GAAG,CAACE,OAAhB,EAAyB;AACrB;AACAtB,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OAHD,MAGO;AACHA,QAAAA,UAAU,CAAC,EAAD,CAAV;;AACA,iBAAQgD,KAAR,CAAc5B,GAAG,CAACW,OAAlB;AACH;AACJ,KATD;AAUH,GA9BD,CA3J2B,CA0L3B;;;AACA,QAAMsB,kBAAkB,GAAI9D,UAAD,IAAqB;AAC5C,QAAI+D,KAAa,GAAG,EAApB;;AACA,QAAI/D,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACqD,OAAX,CAAoBC,OAAD,IAAkB;AACjC,YAAIA,OAAO,CAACU,OAAR,CAAgB,OAAhB,MAA6B,CAAC,CAAlC,EAAqC;AACjCD,UAAAA,KAAK,GAAGT,OAAR;AACH;AACJ,OAJD;AAKH;;AACD,WAAOS,KAAP;AACH,GAVD;;AAYA,sBACI;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAMQnE,QAAQ,IAAIA,QAAQ,CAACiD,MAArB,IAA+BjD,QAAQ,CAACqE,GAAT,CAAcpD,IAAD,IAAe;AACvD,gCAAO;AAEH,cAAA,SAAS,EAAEX,UAAU,KAAKW,IAAI,CAACT,QAApB,GAA+B,iBAA/B,GAAmD,UAF3D;AAGH,cAAA,OAAO,EAAE,MAAMQ,iBAAiB,CAACC,IAAD,CAH7B;AAAA,sCAKH;AAAA,uCACI;AAAK,kBAAA,GAAG,EAAE5B,GAAV;AAAe,kBAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBALG,eAQH;AAAA,0BAAO4B,IAAI,CAACT;AAAZ;AAAA;AAAA;AAAA;AAAA,sBARG;AAAA,eACES,IAAI,CAACC,GADP;AAAA;AAAA;AAAA;AAAA,oBAAP;AAUH,WAX8B,CANvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAqBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BV;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,wBACKE,SAAS,GAAI,GAAEA,SAAU,MAAhB,GAAyB,KAAIwD,kBAAkB,CAAC9D,UAAD,CAAa;AAD1E;AAAA;AAAA;AAAA;AAAA,oBADJ,EAKQM,SAAS,KAAK,OAAd,gBAAwB;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACpB;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,wCACI;AAAM,kBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADoB,eASpB;AAAK,gBAAA,SAAS,EAAC,gBAAf;AAAA,wCACI;AAAM,kBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAToB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,gBAiBS;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBACJR,QAAQ,IAAIA,QAAQ,CAAC+C,MAArB,IAA+B/C,QAAQ,CAACmE,GAAT,CAAa,CAACpD,IAAD,EAAO8B,KAAP,KAAiB;AAC1D,oBAAI9B,IAAI,CAAC0B,MAAL,KAAgB,OAApB,EAA6B;AACzB,sCAAO;AAAK,oBAAA,SAAS,EAAC,eAAf;AAAA,4CACH;AAAM,sBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BADG,eAEH;AAAA,gCAAO1B,IAAI,CAAC2B;AAAZ;AAAA;AAAA;AAAA;AAAA,4BAFG;AAAA,qBAAoCG,KAApC;AAAA;AAAA;AAAA;AAAA,0BAAP;AAIH,iBALD,MAKO;AACH,sCAAO;AAAK,oBAAA,SAAS,EAAC,gBAAf;AAAA,4CACH;AAAM,sBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,4BADG,eAEH;AAAA,gCAAO9B,IAAI,CAAC2B;AAAZ;AAAA;AAAA;AAAA;AAAA,4BAFG;AAAA,qBAAqCG,KAArC;AAAA;AAAA;AAAA;AAAA,0BAAP;AAIH;AACJ,eAZ+B;AAD3B;AAAA;AAAA;AAAA;AAAA,oBAtBjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eA4CI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAEnC,GADX;AAEI,gBAAA,QAAQ,EAAG0D,CAAD,IAAOzD,UAAU,CAACyD,CAAC,CAACC,MAAF,CAASC,KAAV,CAF/B;AAII,gBAAA,QAAQ,EAAE;AAAEC,kBAAAA,OAAO,EAAE,CAAX;AAAcC,kBAAAA,OAAO,EAAE;AAAvB;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI;AAAK,cAAA,SAAS,EAAC,UAAf;AAA0B,cAAA,OAAO,EAAEd,WAAnC;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsFH,CA7RD;;GAAMnE,M;;KAAAA,M;AA+RN,eAAeA,MAAf;;AAEA,SAASwB,IAAT,CAAcA,IAAd,EAAyB8B,KAAzB,EAAwM;AACpM,QAAM,IAAI4B,KAAJ,CAAU,2BAAV,CAAN;AACH;;AACD,SAAS5B,KAAT,CAAe9B,IAAf,EAAmN8B,KAAnN,EAAkY;AAC9X,QAAM,IAAI4B,KAAJ,CAAU,2BAAV,CAAN;AACH","sourcesContent":["import { Input, message } from 'antd';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport './style.less'\r\nconst { TextArea } = Input;\r\nconst boy = require('../../assets/boy.png').default;\r\nconst girl = require('../../assets/girl.png').default;\r\nconst ChatPC: React.FC = () => {\r\n    // socket\r\n    let ws;\r\n    let httpUrl = \"http://websocket.sendcmd.com\";\r\n    let wsUrl = \"ws://websocket.sendcmd.com:9004\";\r\n    // let httpUrl = \"http://192.168.3.17:9004\";\r\n    // let wsUrl = \"ws://192.168.3.17:9004\";\r\n    let currentUserList: any = useRef()\r\n    let currentUserActive: any = useRef() // 选中的聊天用户\r\n    let currentChatList: any = useRef() // 用户聊天列表\r\n    const [userList, setuserList] = useState<Array<any>>() // 客服聊天列表\r\n    const [chatList, setchatList] = useState<Array<any>>() // 用户聊天列表\r\n    const [sessionIds, setsessionIds] = useState<Array<any>>()\r\n    const [userActive, setuserActive] = useState<string | undefined>();\r\n    const [userName, setuseruserName] = useState<string | undefined>();\r\n    const [adminUser] = useState(Cookies.get(\"user\"))\r\n    const [msg, setmessage] = useState<any>(\"\")\r\n    const [myID, setmyID] = useState<string>()\r\n    const onClickSelectUser = (item: any): void => {\r\n        setuserActive(item.key);\r\n        currentUserActive.current = item.key;\r\n        currentUserActive.current = item.key;\r\n        setuseruserName(item.userName)\r\n    }\r\n    useEffect(() => {\r\n        if (adminUser === 'admin') {\r\n            onopen(adminUser);\r\n            let _userList = sessionStorage.getItem('userList')\r\n            if (_userList !== null) {\r\n                setuserList(JSON.parse(_userList))\r\n            }\r\n        } else {\r\n            let key = sessionStorage.getItem('myID')\r\n            let _currentChatList = sessionStorage.getItem('currentChatList')\r\n            if (key) {\r\n                setmyID(key)\r\n                onopen(key);\r\n                if (_currentChatList) {\r\n                    currentChatList.current = JSON.parse(_currentChatList);\r\n                    setchatList(JSON.parse(_currentChatList))\r\n                }\r\n            } else {\r\n                getNewUser()\r\n            }\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n    }, [chatList])\r\n\r\n    useEffect(() => { // 客服初始化\r\n        if (!userName && !userActive && userList && adminUser === 'admin') {\r\n            // debugger\r\n            console.log(userList[0].userName);\r\n            let userName = userList[0].userName\r\n            let key = userList[0].key\r\n            currentUserActive.current = key;\r\n            currentUserActive.current = userName;\r\n            setuserActive(userList[0].key);\r\n            setuseruserName(userList[0].userName)\r\n        }\r\n    }, [userList])\r\n\r\n    /**\r\n     * 不是admin 生成新用户\r\n     * @param  \r\n     */\r\n    const getNewUser = () => {\r\n        let url = httpUrl + \"/chat/getRoomProof\";\r\n        axios.get(url).then(response => {\r\n            let res = response.data;\r\n            if (200 === res.success) {\r\n                setmyID(res.data)\r\n                sessionStorage.setItem('myID', res.data)\r\n                onopen(res.data);\r\n            }\r\n        });\r\n    }\r\n    /*\r\n     * 加入到房间\r\n     */\r\n    const onopen = (proof: string) => {\r\n        // let addRoomUrl = 'ws://127.0.0.1:9004/chat-room/' + proof;\r\n        let addRoomUrl = wsUrl + '/chat-room/' + proof;\r\n        ws = new WebSocket(addRoomUrl);\r\n\r\n        // 连接\r\n        ws.onopen = () => {\r\n            console.log(\"[\" + proof + \"] 加入连接...\");\r\n        };\r\n\r\n        // 接收消息\r\n        ws.onmessage = (event) => {\r\n            // 服务端发送的消息\r\n            let dto = JSON.parse(event.data);\r\n            // flag\r\n            const { sender, message, flag } = dto;\r\n            if (adminUser === 'admin') { // 客服\r\n                let _userList = currentUserList.current || [];\r\n                const { state, index } = isExistUser(sender, _userList);\r\n                if (flag === 0) { // 聊天\r\n\r\n                }\r\n                if (flag === 1 && sender !== \"admin\") { // 进入聊天\r\n                    if (_userList.length === 0 || !state) { // 没有用户 或者 不在用户列表中\r\n                        _userList.unshift({ key: sender, flag, userName: sender, charList: [{ sender: \"admin\", message: '你好' }] })\r\n                    }\r\n                    if (state) { // 存在用户列表中 \r\n                        _userList[index].flag = flag\r\n                    }\r\n                }\r\n                if (flag === 2) { //离开 \r\n                    if (_userList.length !== 0) {\r\n                        let leave = _userList.splice(index, 1)[0];\r\n                        leave['flag'] = flag;\r\n                        _userList.push(leave)\r\n                    }\r\n                }\r\n                if (_userList.length !== 0) {\r\n                    currentUserList.current = _userList;\r\n                    sessionStorage.setItem(\"userList\", JSON.stringify(_userList));\r\n                    setuserList([..._userList])\r\n                }\r\n            } else { // 用户\r\n                let _currentChatList = currentChatList.current || [];\r\n                if (flag === 0) { // 聊天\r\n                    _currentChatList.push({ sender, message });\r\n                }\r\n                if (flag === 1 && !sessionStorage.getItem('currentChatList')) { // 进入聊天\r\n                    _currentChatList.push({ sender: \"admin\", message: '你好' })\r\n                }\r\n                currentChatList.current = _currentChatList;\r\n                setchatList([..._currentChatList])\r\n                sessionStorage.setItem(\"currentChatList\", JSON.stringify(_currentChatList));\r\n            }\r\n        };\r\n\r\n        // 关闭连接\r\n        ws.onclose = () => {\r\n            // $('#message_content').append('[' + proof + '] 离开了聊天室!');\r\n            // console.log(\"[\" + proof + \"] 退出连接...\");\r\n        }\r\n    }\r\n    // 判断用户是否存着客户聊天列表\r\n    const isExistUser = (key: string, userList: any) => {\r\n        let state = false, index = 0;\r\n        userList.forEach((element: any, idx: number) => {\r\n            if (element.key === key) {\r\n                state = true;\r\n                index = idx;\r\n            }\r\n        });\r\n        return { state, index };\r\n    }\r\n    // 发送消息\r\n    const sendMessage = () => {\r\n        if (!msg) {\r\n            message.error(\"请输入消息内容\");\r\n            return false\r\n        }\r\n        let sendToHimUrl: string;\r\n        let param: any;\r\n        if (adminUser === \"admin\") {\r\n            sendToHimUrl = httpUrl + '/chat/admin/sendToHim'\r\n            param = {\r\n                who: userActive,\r\n                msg: msg\r\n            }\r\n        } else {\r\n            sendToHimUrl = httpUrl + '/chat/' + myID + '/sendToHim'\r\n            param = {\r\n                who: \"admin\",\r\n                msg: msg\r\n            }\r\n        }\r\n        axios.post(sendToHimUrl, param).then((response: { data: any; }) => {\r\n            let res = response.data;\r\n            if (200 === res.success) {\r\n                // 清空发送的消息\r\n                setmessage(\"\")\r\n            } else {\r\n                setmessage(\"\")\r\n                message.error(res.message)\r\n            }\r\n        })\r\n    }\r\n    // 连接的是哪个客服\r\n    const getCustomerService = (sessionIds: any) => {\r\n        let cName: string = \"\";\r\n        if (sessionIds) {\r\n            sessionIds.forEach((element: any) => {\r\n                if (element.indexOf(\"admin\") !== -1) {\r\n                    cName = element\r\n                }\r\n            });\r\n        }\r\n        return cName;\r\n    }\r\n\r\n    return (\r\n        <section className='chat-window'>\r\n            <section className='chat-pc'>\r\n                <div className='char-content'>\r\n                    <div className='chat-left'>\r\n                        <div className='search'>\r\n                            <input type=\"text\" />\r\n                            <span className='icon'></span>\r\n                        </div>\r\n                        {\r\n                            userList && userList.length && userList.map((item: any) => {\r\n                                return <div\r\n                                    key={item.key}\r\n                                    className={userActive === item.userName ? 'active chat-row' : 'chat-row'}\r\n                                    onClick={() => onClickSelectUser(item)}\r\n                                >\r\n                                    <div >\r\n                                        <img src={boy} alt=\"\" />\r\n                                    </div>\r\n                                    <span>{item.userName}</span>\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className='chat-right'>\r\n                        <div className='right-title'>{userName}</div>\r\n                        <div className='right-msg'>\r\n                            <div className='connect-msg'>\r\n                                {adminUser ? `${adminUser}连接成功` : `客服${getCustomerService(sessionIds)}为你服务`}\r\n                            </div>\r\n                            {\r\n                                adminUser === 'admin' ? <div className='chat'>\r\n                                    <div className='chat-msg left'>\r\n                                        <span className='girl'></span>\r\n                                        <span>\r\n                                            撒大声地付\r\n                                            多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多\r\n                                            {/* <span className=\"arrow\"></span> */}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className='chat-msg right'>\r\n                                        <span className='girl'></span>\r\n                                        <span>\r\n                                            撒大声地付\r\n                                            多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多撒大声地付多撒所多\r\n                                            {/* <span className=\"arrow\"></span> */}\r\n                                        </span>\r\n                                    </div>\r\n                                </div> : <div className='chat'>\r\n                                    {chatList && chatList.length && chatList.map((item, index) => {\r\n                                        if (item.sender === 'admin') {\r\n                                            return <div className='chat-msg left' key={index}>\r\n                                                <span className='girl'></span>\r\n                                                <span>{item.message}</span>\r\n                                            </div>\r\n                                        } else {\r\n                                            return <div className='chat-msg right' key={index}>\r\n                                                <span className='girl'></span>\r\n                                                <span>{item.message}</span>\r\n                                            </div>\r\n                                        }\r\n                                    })}\r\n\r\n\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className='right-send'>\r\n                            <div className='send-push'>\r\n                                <TextArea\r\n                                    value={msg}\r\n                                    onChange={(e) => setmessage(e.target.value)\r\n                                    }\r\n                                    autoSize={{ minRows: 3, maxRows: 3 }}\r\n                                />\r\n                            </div>\r\n                            <div className='send-btn' onClick={sendMessage}>\r\n                                <button>发送</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ChatPC\r\n\r\nfunction item(item: any, index: any): string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined {\r\n    throw new Error('Function not implemented.');\r\n}\r\nfunction index(item: (item: any, index: any) => string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined, index: any): string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}